[{"path":"https://monitoramento.sepe.pe.gov.br/webdav/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 webdav authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/env_variables.html","id":"macos-and-linux-folks-youre-basically-already-there","dir":"Articles","previous_headings":"Step 1: Setting Up Environment Variables","what":"macOS and Linux Folks: You’re Basically Already There","title":"Using Environment Variables for Security in the webdav Package","text":"Just simple steps protect credentials: Open terminal find trusty shell profile (e.g., .bash_profile, .zshrc, .bashrc): Stick magic incantation bottom: Save reload : Boom! Credentials safe sound shadows terminal. ’re now one step closer keeping secrets… secret.","code":"nano ~/.bash_profile  # or nano ~/.zshrc for zsh users export OWNCLOUD_USERNAME=\"your_username\" export OWNCLOUD_PASSWORD=\"your_password\" source ~/.bash_profile  # or source ~/.zshrc"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/env_variables.html","id":"windows-users-youve-got-this-too","dir":"Articles","previous_headings":"Step 1: Setting Up Environment Variables","what":"Windows Users: You’ve Got This Too!","title":"Using Environment Variables for Security in the webdav Package","text":"’re Windows, ’s scary sounds—need dig .bash_profile : Open Start Menu search “Environment Variables.” Click Edit system environment variables. System Properties, click Environment Variables. OWNCLOUD_USERNAME username. OWNCLOUD_PASSWORD password. Now ’re good go! Next time open R, variables ready protect credentials.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/env_variables.html","id":"pro-tip-use--renviron-for-project-specific-vars","dir":"Articles","previous_headings":"Step 1: Setting Up Environment Variables","what":"Pro Tip: Use .Renviron for Project-Specific Vars","title":"Using Environment Variables for Security in the webdav Package","text":"Want project-specific secrets? Meet .Renviron. ’s like .bash_profile, R projects! Create .Renviron file project directory: Done! variables pop like magic whenever use R project.","code":"OWNCLOUD_USERNAME=your_username OWNCLOUD_PASSWORD=your_password"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/env_variables.html","id":"step-2-accessing-environment-variables-in-your-code","dir":"Articles","previous_headings":"","what":"Step 2: Accessing Environment Variables in Your Code","title":"Using Environment Variables for Security in the webdav Package","text":"character(0) ’s avoid “hardcoding password trap.” Instead typing username = \"secret\" like ’s first day R, grab credentials Sys.getenv(): See? passwords hanging code! ’s like ’re wearing invisible cloak around credentials.","code":"# Keep those secrets safe username <- Sys.getenv(\"OWNCLOUD_USERNAME\") password <- Sys.getenv(\"OWNCLOUD_PASSWORD\")  # Use them securely in your webdav function calls webdav_upload_file(   base_url = \"https://drive.expresso.pe.gov.br\",   file_path = \"local_file.txt\",   server_path = \"/Shared/der/app_painel/data/\",   username = username,   password = password )"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/env_variables.html","id":"step-3-dont-forget--gitignore","dir":"Articles","previous_headings":"","what":"Step 3: Don’t Forget .gitignore","title":"Using Environment Variables for Security in the webdav Package","text":"Don’t person commits .Renviron file GitHub. Add .Renviron .gitignore file keep safe: R Fortune references used: fortunes: R Fortunes. collection fortunes R community.","code":"# .gitignore .Renviron"},{"path":[]},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/webdav.html","id":"creating-a-webdav-request","dir":"Articles","previous_headings":"Functions","what":"1. Creating a WebDAV Request","title":"Get Started","text":"function creates basic authenticated WebDAV request given resource path WebDAV server. sets authentication using provided username password returns request object. Parameters: base_url: Base URL WebDAV server (e.g., https://drive.expresso.pe.gov.br). username: Username authentication. password: Password authentication. verbose: Whether print debug information (default FALSE). Example:","code":"webdav_create_request(base_url, username, password, verbose = FALSE) # Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 3, max_seconds = 4, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Create a request if (class(test_server) != \"try-error\")   req <- webdav_create_request(base_url = test_server$url, verbose = TRUE)"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/webdav.html","id":"copying-files","dir":"Articles","previous_headings":"Functions","what":"2. Copying Files","title":"Get Started","text":"function copies file directory one path another WebDAV server. Parameters: base_url: Base URL WebDAV server. from_path: source file path copy. to_path: destination path file copied. username: Username authentication. password: Password authentication. Example:","code":"webdav_copy_file(base_url, from_path, to_path, username, password) # Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 3, max_seconds = 4, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Copy a file from one path to another if (class(test_server) != \"try-error\")   webdav_copy_file(base_url = test_server$url,     from_path = \"Project.pdf\",     to_path = \"New_Project.pdf\",     verbose = TRUE)"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/webdav.html","id":"creating-a-directory","dir":"Articles","previous_headings":"Functions","what":"3. Creating a Directory","title":"Get Started","text":"function creates new directory (collection) WebDAV server using MKCOL method. Parameters: base_url: Base URL WebDAV server. folder_path: Path directory created. username: Username authentication. password: Password authentication. Example:","code":"webdav_create_directory(base_url, folder_path, username, password) # Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 3, max_seconds = 4, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Create a directory on the WebDAV server if (class(test_server) != \"try-error\")   webdav_create_directory(     base_url = test_server$url,      folder_path = \"Test_Folder\",      verbose = TRUE)"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/webdav.html","id":"deleting-a-file-or-directory","dir":"Articles","previous_headings":"Functions","what":"4. Deleting a File or Directory","title":"Get Started","text":"function deletes file directory WebDAV server using DELETE method. Parameters: 1. base_url: Base URL WebDAV server. 1. resource_path: path file directory delete. 1. username: Username authentication. 1. password: Password authentication. Example:","code":"webdav_delete_resource(   base_url,    resource_path,    username,    password,    verbose = FALSE   ) # Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 3, max_seconds = 4, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Delete a file or directory if (class(test_server) != \"try-error\")   webdav_delete_resource(base_url = test_server$url,    resource_path = \"Notes.txt\",   verbose = TRUE)"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/webdav.html","id":"listing-files-in-a-directory","dir":"Articles","previous_headings":"Functions","what":"5. Listing Files in a Directory","title":"Get Started","text":"function lists files within directory WebDAV server using PROPFIND method. Parameters: base_url: Base URL WebDAV server. folder_path: Path folder list files. username: Username authentication. password: Password authentication. depth: Depth PROPFIND request (default 1). Example:","code":"webdav_list_files(   base_url,    folder_path,    username,    password,    depth = 1,    verbose = FALSE   ) # Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 3, max_seconds = 4, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # List files in a directory if (class(test_server) != \"try-error\")   webdav_list_files(     base_url = test_server$url,      folder_path = \"Sales/\",      verbose = TRUE)"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/webdav.html","id":"uploading-a-file","dir":"Articles","previous_headings":"Functions","what":"6. Uploading a File","title":"Get Started","text":"function uploads local file WebDAV server. Parameters: base_url: Base URL WebDAV server. local_path: Local path file. server_path: Path WebDAV server file uploaded. username: Username authentication. password: Password authentication. timeout: Time limit upload operation (default 300 seconds). Example:","code":"webdav_upload_file(   base_url,    local_path,    server_path,    username,    password,    timeout = 300,   verbose = FALSE   ) # Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 3, max_seconds = 4, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Upload a file file_test <- tempfile(pattern = \"teste_\", fileext = \".txt\") cat(\"Text file content\", file = file_test) if (class(test_server) != \"try-error\")   webdav_upload_file(base_url = test_server$url, local_path = file_test, verbose = TRUE)"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/webdav.html","id":"download-a-file","dir":"Articles","previous_headings":"Functions","what":"7. Download a file","title":"Get Started","text":"function downloads file WebDAV server saves local directory. validates provided parameters, handles errors, optionally prints detailed logs requested. Parameters: base_url: base URL WebDAV server. file_path: path file WebDAV server download (relative ‘base_url’). destination_path: local directory downloaded file saved. Defaults current directory. username: username WebDAV authentication. Defaults “WEBDAV_USERNAME” environment variable. password: password WebDAV authentication. Defaults “WEBDAV_PASSWORD” environment variable. verbose: Logical. TRUE, prints detailed messages download process. Example:","code":"webdav_download_file(base_url, file_path, destination_path, username, password, verbose) # Example usage with a public WebDAV server. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 3, max_seconds = 4, backoff =  ~ 1) %>%   req_perform()  # Download a file from the WebDAV server if (class(test_server) != \"try-error\")   webdav_download_file(base_url = test_server$url,     file_path = \"Project.pdf\",     destination_path = tempdir(),     verbose = TRUE) # Visit test_server$url to view the results of the operation."},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/articles/webdav.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Get Started","text":"webdav R package provides interface managing files directories WebDAV-enabled servers. basic file management (uploading, downloading, deleting, copying), directory management, resource locking, package simplifies interactions platforms like OwnCloud, NextCloud, WebDAV-compliant systems.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andre Leite. Author, maintainer. Hugo Vaconcelos. Author. Diogo Bezerra. Author.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leite , Vaconcelos H, Bezerra D (2025). webdav: Simple Interface Interacting 'WebDAV' Servers. R package version 0.1.4, <https://github.com/StrategicProjects/webdav>.","code":"@Manual{,   title = {webdav: A Simple Interface for Interacting with 'WebDAV' Servers},   author = {Andre Leite and Hugo Vaconcelos and Diogo Bezerra},   year = {2025},   note = {R package version 0.1.4},   url = {<https://github.com/StrategicProjects/webdav>}, }"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/index.html","id":"webdav","dir":"","previous_headings":"","what":"A Simple Interface for Interacting with WebDAV Servers","title":"A Simple Interface for Interacting with WebDAV Servers","text":"       WebDAV (Web Distributed Authoring Versioning) extension HTTP protocol allows users collaboratively edit manage files stored remote web servers. provides framework users create, delete, copy, move, download files.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/index.html","id":"examples-of-webdav-servers","dir":"","previous_headings":"","what":"Examples of WebDAV Servers","title":"A Simple Interface for Interacting with WebDAV Servers","text":"platforms implement WebDAV : OwnCloud: popular open-source platform storing sharing files, commonly used organizations. NextCloud: fork OwnCloud focuses user-friendly interfaces collaborative file-sharing features. mod_dav Apache HTTP servers: Adds WebDAV support Apache web server. Microsoft SharePoint: Uses WebDAV file management web.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/check_and_load_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a package is installed and load it — check_and_load_package","title":"Check if a package is installed and load it — check_and_load_package","text":"function checks specified package installed R environment. package installed, automatically installed. installation (necessary), package loaded session.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/check_and_load_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a package is installed and load it — check_and_load_package","text":"","code":"check_and_load_package(package_name)"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/check_and_load_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a package is installed and load it — check_and_load_package","text":"package_name string name package check load.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/check_and_load_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a package is installed and load it — check_and_load_package","text":"Invisibly returns `TRUE` package successfully loaded installed loaded. installation loading fails, error raised.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/check_and_load_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a package is installed and load it — check_and_load_package","text":"","code":"check_and_load_package(\"httr2\") check_and_load_package(\"xml2\")"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/handle_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle HTTP response from Server — handle_response","title":"Handle HTTP response from Server — handle_response","text":"function processes response WebDAV server, checking errors.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/handle_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle HTTP response from Server — handle_response","text":"","code":"handle_response(response)"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/handle_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle HTTP response from Server — handle_response","text":"response response object `httr2` request.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/handle_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle HTTP response from Server — handle_response","text":"processed response content successful, error request failed.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_copy_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a resource on the WebDAV server — webdav_copy_file","title":"Copy a resource on the WebDAV server — webdav_copy_file","text":"function copies resource one URI another WebDAV server using COPY method. validates provided parameters handles errors copy process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_copy_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a resource on the WebDAV server — webdav_copy_file","text":"","code":"webdav_copy_file(   base_url,   from_path,   to_path,   username = Sys.getenv(\"WEBDAV_USERNAME\"),   password = Sys.getenv(\"WEBDAV_PASSWORD\"),   verbose = FALSE )"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_copy_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a resource on the WebDAV server — webdav_copy_file","text":"base_url base URL WebDAV server. from_path source path resource copy. to_path destination path resource copied. username username WebDAV authentication. Defaults \"WEBDAV_USERNAME\" environment variable. password password WebDAV authentication. Defaults \"WEBDAV_PASSWORD\" environment variable. verbose Logical. TRUE, prints detailed messages copy process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_copy_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a resource on the WebDAV server — webdav_copy_file","text":"Logical value indicating whether resource copied successfully.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a collection (directory) on a WebDAV server — webdav_create_directory","title":"Create a collection (directory) on a WebDAV server — webdav_create_directory","text":"function creates collection (directory/folder) WebDAV server using MKCOL method. validates parameters handles errors process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a collection (directory) on a WebDAV server — webdav_create_directory","text":"","code":"webdav_create_directory(   base_url,   folder_path,   username = Sys.getenv(\"WEBDAV_USERNAME\"),   password = Sys.getenv(\"WEBDAV_PASSWORD\"),   verbose = FALSE )"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a collection (directory) on a WebDAV server — webdav_create_directory","text":"base_url base URL WebDAV server (e.g., \"https://example.com/remote.php/dav/files/\"). folder_path path directory create. username username WebDAV authentication. Defaults \"WEBDAV_USERNAME\" environment variable. password password WebDAV authentication. Defaults \"WEBDAV_PASSWORD\" environment variable. verbose Logical. TRUE, prints detailed messages directory creation process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a collection (directory) on a WebDAV server — webdav_create_directory","text":"Logical value indicating whether collection created successfully.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a collection (directory) on a WebDAV server — webdav_create_directory","text":"","code":"# Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 1, max_seconds = 2, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Create a directory on the WebDAV server if (class(test_server) != \"try-error\")   webdav_create_directory(base_url = test_server$url, folder_path = \"Test_Folder\", verbose = TRUE) #> Folder path to create: Test_Folder #> Base URL: https://www.webdavserver.com/Usere16cc0f/Test_Folder #> Username: Not provided #> Request object created successfully. #> No authentication added. #> Collection successfully created at: Test_Folder #> [1] TRUE"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a request for the WebDAV server — webdav_create_request","title":"Create a request for the WebDAV server — webdav_create_request","text":"function creates base request WebDAV server proper authentication. validates provided parameters handles errors connection setup.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a request for the WebDAV server — webdav_create_request","text":"","code":"webdav_create_request(   base_url,   username = Sys.getenv(\"WEBDAV_USERNAME\"),   password = Sys.getenv(\"WEBDAV_PASSWORD\"),   verbose = FALSE )"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a request for the WebDAV server — webdav_create_request","text":"base_url base URL WebDAV server (e.g., \"https://example.com/remote.php/dav/files/\"). username username WebDAV authentication. Defaults \"WEBDAV_USERNAME\" environment variable. password password WebDAV authentication. Defaults \"WEBDAV_PASSWORD\" environment variable. verbose Logical. TRUE, prints detailed messages request creation process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a request for the WebDAV server — webdav_create_request","text":"`httr2_request` object authentication base URL configured, error message connection fails.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_create_request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a request for the WebDAV server — webdav_create_request","text":"","code":"# Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 1, max_seconds = 2, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Create a request if (class(test_server) != \"try-error\")   req <- webdav_create_request(base_url = test_server$url, verbose = TRUE) #> Base URL: https://www.webdavserver.com/Usercf831ff #> Username: Not provided #> Request object created successfully. #> No authentication added."},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_delete_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a file or directory from the WebDAV server — webdav_delete_resource","title":"Delete a file or directory from the WebDAV server — webdav_delete_resource","text":"function deletes file directory WebDAV server using DELETE method. validates provided parameters handles errors process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_delete_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a file or directory from the WebDAV server — webdav_delete_resource","text":"","code":"webdav_delete_resource(   base_url,   resource_path,   username = Sys.getenv(\"WEBDAV_USERNAME\"),   password = Sys.getenv(\"WEBDAV_PASSWORD\"),   verbose = FALSE )"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_delete_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a file or directory from the WebDAV server — webdav_delete_resource","text":"base_url base URL WebDAV server. resource_path path file directory delete WebDAV server. username username WebDAV authentication. Defaults \"WEBDAV_USERNAME\" environment variable. password password WebDAV authentication. Defaults \"WEBDAV_PASSWORD\" environment variable. verbose Logical value indicating whether print detailed debug messages. TRUE, function outputs additional information progress actions.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_delete_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a file or directory from the WebDAV server — webdav_delete_resource","text":"Logical value indicating whether file directory deleted successfully.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_delete_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a file or directory from the WebDAV server — webdav_delete_resource","text":"","code":"# Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 1, max_seconds = 2, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Delete a file or directory if (class(test_server) != \"try-error\")   webdav_delete_resource(base_url = test_server$url, resource_path = \"Notes.txt\", verbose = TRUE) #> Attempting to delete resource at: https://www.webdavserver.com/User749e1f7/Notes.txt #> Base URL: https://www.webdavserver.com/User749e1f7/Notes.txt #> Username: Not provided #> Request object created successfully. #> No authentication added. #> Resource successfully deleted at: Notes.txt #> [1] TRUE"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_download_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a file from the WebDAV server — webdav_download_file","title":"Download a file from the WebDAV server — webdav_download_file","text":"function downloads file WebDAV server saves local directory. validates provided parameters, handles errors, optionally prints detailed logs requested.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_download_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a file from the WebDAV server — webdav_download_file","text":"","code":"webdav_download_file(   base_url,   file_path,   destination_path = \".\",   username = Sys.getenv(\"WEBDAV_USERNAME\"),   password = Sys.getenv(\"WEBDAV_PASSWORD\"),   verbose = FALSE )"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_download_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a file from the WebDAV server — webdav_download_file","text":"base_url base URL WebDAV server (e.g., \"https://example.com/remote.php/dav/files/\"). file_path path file WebDAV server download (relative `base_url`). destination_path local directory downloaded file saved. Defaults current directory. username username WebDAV authentication. Defaults \"WEBDAV_USERNAME\" environment variable. password password WebDAV authentication. Defaults \"WEBDAV_PASSWORD\" environment variable. verbose Logical. TRUE, prints detailed messages download process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_download_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a file from the WebDAV server — webdav_download_file","text":"Logical value indicating whether file downloaded successfully.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_download_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a file from the WebDAV server — webdav_download_file","text":"","code":"# Example usage with a public WebDAV server. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 1, max_seconds = 2, backoff =  ~ 1) %>%   req_perform()  # Download a file from the WebDAV server if (class(test_server) != \"try-error\")   webdav_download_file(base_url = test_server$url,     file_path = \"Project.pdf\",     destination_path = tempdir(),     verbose = TRUE) #> Base URL: https://www.webdavserver.com/Userbab4c31 #> Downloading from: Project.pdf to: /tmp/Rtmpz236wY/Project.pdf #> Server Path: https://www.webdavserver.com/Userbab4c31/Project.pdf #> Local Destination Path: /tmp/Rtmpz236wY/Project.pdf #> Base URL: https://www.webdavserver.com/Userbab4c31/Project.pdf #> Username: Not provided #> Request object created successfully. #> No authentication added. #> Resource successfully downloaded from https://www.webdavserver.com/Userbab4c31/Project.pdf #> Resource successfully written to /tmp/Rtmpz236wY/Project.pdf #> [1] TRUE # Visit test_server$url to view the results of the operation."},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_list_files.html","id":null,"dir":"Reference","previous_headings":"","what":"List files from a specific folder on WebDAV server — webdav_list_files","title":"List files from a specific folder on WebDAV server — webdav_list_files","text":"function lists files specific folder WebDAV server. folder path provided, lists files root directory. function validates provided parameters handles errors process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_list_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files from a specific folder on WebDAV server — webdav_list_files","text":"","code":"webdav_list_files(   base_url,   folder_path = NULL,   username = Sys.getenv(\"WEBDAV_USERNAME\"),   password = Sys.getenv(\"WEBDAV_PASSWORD\"),   depth = 1,   verbose = FALSE )"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_list_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files from a specific folder on WebDAV server — webdav_list_files","text":"base_url base URL WebDAV server. folder_path path inside WebDAV files located. provided empty, root folder listed. username username WebDAV authentication. Defaults \"WEBDAV_USERNAME\" environment variable. password password WebDAV authentication. Defaults \"WEBDAV_PASSWORD\" environment variable. depth depth PROPFIND request (default 1). verbose Logical value indicating whether print detailed debug messages. TRUE, function outputs additional information progress actions.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_list_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List files from a specific folder on WebDAV server — webdav_list_files","text":"tibble containing: file_name name file. relative_path path file relative specified folder. lastmodified date time file last modified. content_length size file bytes. Returns `NULL` error occurs execution function.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_list_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List files from a specific folder on WebDAV server — webdav_list_files","text":"","code":"# Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 1, max_seconds = 2, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # List files in a directory if (class(test_server) != \"try-error\")   webdav_list_files(base_url = test_server$url, folder_path = \"Sales/\", verbose = TRUE) #> Listing files in folder: Sales/ #> Full URL: https://www.webdavserver.com/User4caf148/Sales #> Base URL: https://www.webdavserver.com/User4caf148/Sales #> Username: Not provided #> Request object created successfully. #> No authentication added. #> Files listed successfully. #> # A tibble: 4 × 4 #>   contents   full_path                     last_modified content_length #>   <chr>      <chr>                         <chr>                  <dbl> #> 1 Australia/ https://www.webdavserver.com… Mon, 03 Feb …             NA #> 2 Canada/    https://www.webdavserver.com… Mon, 03 Feb …             NA #> 3 Europe/    https://www.webdavserver.com… Mon, 03 Feb …             NA #> 4 USA/       https://www.webdavserver.com… Mon, 03 Feb …             NA"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_upload_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a file to the WebDAV server — webdav_upload_file","title":"Upload a file to the WebDAV server — webdav_upload_file","text":"function uploads file specific folder WebDAV server. validates provided parameters handles errors process.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_upload_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a file to the WebDAV server — webdav_upload_file","text":"","code":"webdav_upload_file(   base_url,   local_path,   server_path = \"\",   username = Sys.getenv(\"WEBDAV_USERNAME\"),   password = Sys.getenv(\"WEBDAV_PASSWORD\"),   timeout = 300,   verbose = FALSE )"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_upload_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a file to the WebDAV server — webdav_upload_file","text":"base_url base URL WebDAV server. local_path local path file uploaded. server_path folder path WebDAV server file uploaded. username username WebDAV authentication. Defaults \"WEBDAV_USERNAME\" environment variable. password password WebDAV authentication. Defaults \"WEBDAV_PASSWORD\" environment variable. timeout timeout upload request seconds (default 300 seconds). verbose Logical value indicating whether print detailed debug messages. TRUE, function outputs additional information progress actions.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_upload_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a file to the WebDAV server — webdav_upload_file","text":"Logical value indicating whether file uploaded successfully.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/reference/webdav_upload_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a file to the WebDAV server — webdav_upload_file","text":"","code":"# Example usage with a public WebDAV server. # Visit test_server$url link to view the results of the operation. library(magrittr) library(httr2) test_server <- \"https://www.webdavserver.com/\" %>%   request() %>%   req_retry(max_tries = 1, max_seconds = 2, backoff =  ~ 1) %>%   req_perform() %>%   try(silent = TRUE)  # Upload a file file_test <- tempfile(pattern = \"teste_\", fileext = \".txt\") cat(\"Text file content\", file = file_test) if (class(test_server) != \"try-error\")   webdav_upload_file(base_url = test_server$url, local_path = file_test, verbose = TRUE) #> Uploading file: /tmp/Rtmpz236wY/teste_1c664a81ee85.txt #> Target URL: https://www.webdavserver.com/User17a6692/teste_1c664a81ee85.txt #> Base URL: https://www.webdavserver.com/User17a6692/teste_1c664a81ee85.txt #> Username: Not provided #> Request object created successfully. #> No authentication added. #> File successfully uploaded to:  #> [1] TRUE"},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/news/index.html","id":"webdav-014","dir":"Changelog","previous_headings":"","what":"webdav 0.1.4","title":"webdav 0.1.4","text":"CRAN release: 2025-02-13 Changed license MIT Adjusted time limits examples Added internet connection test ensure network availability","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/news/index.html","id":"webdav-013","dir":"Changelog","previous_headings":"","what":"webdav 0.1.3","title":"webdav 0.1.3","text":"CRAN release: 2025-01-08 Expose lastmodified contentlength via webdav_list_files. Idea Benjamin Buchwitz (bchwtz) issue: https://github.com/StrategicProjects/webdav/issues/1","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/news/index.html","id":"webdav-012","dir":"Changelog","previous_headings":"","what":"webdav 0.1.2","title":"webdav 0.1.2","text":"CRAN release: 2024-12-02 function allows users specify file server download specified local path. Verbose mode (verbose = TRUE) provides detailed output download process, including file path server local destination. Added examples using demo WebDav server.","code":""},{"path":"https://monitoramento.sepe.pe.gov.br/webdav/news/index.html","id":"webdav-011","dir":"Changelog","previous_headings":"","what":"webdav 0.1.1","title":"webdav 0.1.1","text":"CRAN release: 2024-10-08 Added NEWS.md file track changes package.","code":""}]
